30397485.0
Wrote profile results to euler72.py.lprof
Timer unit: 1e-06 s

Total time: 0.0050887 s
File: euler72.py
Function: gen_primes at line 4

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     4                                           @profile
     5                                           def gen_primes(n):
     6         1          0.8      0.8      0.0      l = range(2,n)
     7         1          0.4      0.4      0.0      primes = []
     8       999        376.8      0.4      7.4      for j in range(0,len(l)):
     9       998        249.8      0.3      4.9          p = True
    10      2968        971.8      0.3     19.1          for d in primes:
    11      2967       1432.9      0.5     28.2              if(d > sqrt(l[j])):
    12       167         46.3      0.3      0.9                  break
    13      2800       1090.0      0.4     21.4              if(l[j] % d == 0):
    14       830        253.6      0.3      5.0                  p = False
    15       830        214.2      0.3      4.2                  break;
    16       998        385.5      0.4      7.6          if(p):
    17       168         65.3      0.4      1.3              primes.append(l[j])
    18
    19         1          1.3      1.3      0.0      return primes

## 11 and 13 lines should be optimized

Total time: 0.133842 s
File: euler72.py
Function: factorize at line 21

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    21                                           @profile
    22                                           def factorize(n,primes):
    23      9999       2920.5      0.3      2.2      factors = []
    24      9999       2473.6      0.2      1.8      init_n = n
    25     96347      27819.0      0.3     20.8      for p in primes:
    26    118736      40063.5      0.3     29.9          while(n%p == 0):
    27     22389       6111.7      0.3      4.6              n = n/p
    28     22389       6384.8      0.3      4.8              factors.append(p)
    29     96347      34989.2      0.4     26.1          if(p > sqrt(n)):
    30      9999       2605.4      0.3      1.9              break
    31      9999       3173.8      0.3      2.4      if(n > 1):
    32      9596       2780.6      0.3      2.1          factors.append(n)
    33      9999       4519.9      0.5      3.4      return factors

## 26 and 29 lines should be optimized

Total time: 0.292102 s
File: euler72.py
Function: fast_phi at line 50

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    50                                           @profile
    51                                           def fast_phi(n,primes):
    52      9999     257632.0     25.8     88.2      factors = factorize(n,primes)
    53      9999       3000.2      0.3      1.0      phi = factors[0]-1
    54     31985      12391.5      0.4      4.2      for i in range(1,len(factors)):
    55     21986       7150.2      0.3      2.4          if(factors[i] == factors[i-1]):
    56      7685       2873.9      0.4      1.0              phi *= (factors[i]-1)*(factors[i])/(factors[i]-1)
    57                                                   else:
    58     14301       4831.4      0.3      1.7              phi *= (factors[i]-1)
    59      9999       4222.9      0.4      1.4      return phi


## 52 line should be optimized
